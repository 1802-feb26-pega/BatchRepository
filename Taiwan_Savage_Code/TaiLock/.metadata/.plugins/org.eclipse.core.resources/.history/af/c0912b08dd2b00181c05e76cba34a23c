package com.tailock.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import com.tailock.pojos.Employee;
import com.tailock.pojos.Request;
import com.tailock.util.ConnectionFactory;

public class RequestDao {
	
	/**
	 * need to be able to do CRUD operationss on requests and update the request info table
	 */
	
	public int getMaxReqId() {
		Request req = new Request();
		int maxId = 0;
		try(Connection conn = ConnectionFactory
				.getInstance().getConnection();){
			String sql = "select request_id from reimbursement_request";
			Statement stmt = conn.createStatement();
			ResultSet info = stmt.executeQuery(sql);
			
			while(info.next()){
				if (info.getInt(1) > maxId) {
					maxId = info.getInt(1);
				}
				
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
		
		return maxId;
	}
	
	public void createRequest(int employee_id, Date eventStartDate, int timeOfEvent, String location, String description,
			int costOfEvent, int gradeFormat, int requestType, int eventType) {
		try (Connection conn = ConnectionFactory
				.getInstance().getConnection();){
			String sql = "insert into employee (employee_id, event_start_date, date_of_request, location_of_event, request_description, cost, grade_format,"
					+ " request_type, event_type)"
					+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?)";
			PreparedStatement ps = conn.prepareStatement(sql);
			ps.setInt(1, employee_id);
			java.sql.Date utildate = new java.sql.Date(eventStartDate.getTime());
			ps.setDate(2, utildate);
			ps.setInt(3, timeOfEvent);
			ps.setString(4, location);
			ps.setString(5, description);
			ps.setInt(6, costOfEvent);
			ps.setInt(7, gradeFormat);
			ps.setInt(8, requestType);
			ps.setInt(9, eventType);
			
			int updated = ps.executeUpdate();
			if(updated > 0) {
				System.out.println("Added " + updated + " new employee");
			}
			else {
				System.out.println("Wasn't added for some reason");
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public List<Request> getAllRequests() {
		Request req = new Request();
		int maxId = 0;
		List<Request> requests = new ArrayList();
		try(Connection conn = ConnectionFactory
				.getInstance().getConnection();){
			String sql = "select * from reimbursement_request";
			Statement stmt = conn.createStatement();
			ResultSet info = stmt.executeQuery(sql);
			

			while(info.next()){
				req = new Request(info.getInt(2), info.getDate(3), info.getInt(4), info.getString(5), info.getString(6),
			info.getInt(7), info.getInt(11), info.getInt(12), info.getInt(13));
				req.setRequest_id(info.getInt(1));
				req.setReimAmount(info.getShort(8));
				req.setTimeOfEvent(info.getInt(9));
				req.setDaysMissed(info.getInt(10));
				req.setPriority(info.getInt(14));
				req.setStatus(15);
				requests.add(req);
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return requests;
	}
	
	public List<Request> getAllUserRequests(Employee emp) {
		Request req = new Request();
		int maxId = 0;
		List<Request> requests = new ArrayList();
		try(Connection conn = ConnectionFactory
				.getInstance().getConnection();){
			String sql = "select * from reimbursement_request where employee_id = ?";
			PreparedStatement stmt = conn.prepareStatement(sql);
			stmt.setInt(1, emp.getEmployeeId());
			ResultSet info = stmt.executeQuery();
			
			
			while(info.next()){
				System.out.println(info.getInt(1));
				req = new Request(info.getInt(2), info.getDate(3), info.getDate(4), info.getString(5), info.getString(6), info.getInt(7), info.getInt(11), info.getInt(12), info.getInt(13));
				
				req.setRequest_id(info.getInt(1));
				req.setReimAmount(info.getShort(8));
				req.setTimeOfEvent(info.getInt(9));
				req.setDaysMissed(info.getInt(10));
				req.setPriority(info.getInt(14));
				req.setStatus(15);
				requests.add(req);
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return requests;
	}
	
	public Request getRequest(int request_id) {
		Request req = new Request();
		int maxId = 0;
		try(Connection conn = ConnectionFactory
				.getInstance().getConnection();){
			String sql = "select * from reimbursement_request where request_id = ?";
			PreparedStatement stmt = conn.prepareStatement(sql);
			stmt.setInt(1, request_id);
			ResultSet info = stmt.executeQuery(sql);
			

			while(info.next()){
				req = new Request(info.getInt(2), info.getDate(3), info.getInt(4), info.getString(5), info.getString(6),
			info.getInt(7), info.getInt(11), info.getInt(12), info.getInt(13));
				req.setRequest_id(info.getInt(1));
				req.setReimAmount(info.getShort(8));
				req.setTimeOfEvent(info.getInt(9));
				req.setDaysMissed(info.getInt(10));
				req.setPriority(info.getInt(14));
				req.setStatus(15);
				return req;
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return req;
	}
	
/*	public Request updateRequest() {
		
	}*/
	
	//can't delete requests rn
	public void deleteRequest() {
		
	}

}
