Access Modifiers
Access Levels:
1. Public - usable everywhere - any class in any package can access - can apply to classes, functions, and fields
2. (default) - no access modifier - accessible within the same package - can apply to classes, functions, and fields
3. protected - accessible only through inheritance - can only apply to functions and fields
4. private - accessible only within same class - can only apply to functions and fields

--> if a class is not accessible, neither are its members
--> a child class can be equally or less restrictive than its parent class

Keywords:
- static
	- associated with the class and not an instance of the class
	- can only be applied to classes if nested
	- instance functions can access static functions and fields, but NOT the other way around

- final
	- All caps
	- variable - cannot be reassigned; essentially a constant
	- function - cannot be overridden; CAN BE OVERLOADED
	- class - cannot be extended
	
Constructors
	- create instance of a class
	- no return type
	- can be overloaded
	- first line can be implicitly super() or this()
	- if no constructor is defined, classes have a default constructor(no args)
	- if constructor is defined, no default one exists, so must explicitly define no args
	
Interfaces
	- type of class which cannot be instantiated
	- considered a "Contract" - "anything that implements me can do this"
	- an implemented class MUST implement all abstract methods in the interface
	- CAN extend other interfaces
	- cannot extend classes; classes IMPLEMENT interfaces
	
Coding Wars for practice
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	