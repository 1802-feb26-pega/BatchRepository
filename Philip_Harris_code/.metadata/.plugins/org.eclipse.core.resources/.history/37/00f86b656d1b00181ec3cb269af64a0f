/**
 * 
 */
package com.revature.eval.java.core;

import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import java.util.StringTokenizer;

/**
 * @author phili
 *
 */
public class Execute {

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		//EvaluationService q1 = new EvaluationService();
		
		//System.out.println(q1.reverse("Revature"));
		//System.out.println(q1.acronym("Portable Network Graphics"));
		
		/*
		Triangle t1 = new Triangle(10,10,10);
		Triangle t2 = new Triangle(9,10,10);
		Triangle t3 = new Triangle(1,2,3);
	
		System.out.println("Is Triangle one a Equilateral? "  + t1.isEquilateral());
		System.out.println("Is Triangle one a Isosceles? "  + t1.isIsosceles());
		System.out.println("Is Triangle one a Scalene? "  + t1.isScalene());
		
	
		System.out.println("Is Triangle two a Equilateral? "  + t2.isEquilateral());
		System.out.println("Is Triangle tw0 a Isosceles? "  + t2.isIsosceles());
		System.out.println("Is Triangle two a Scalene? "  + t2.isScalene());
	
		System.out.println("Is Triangle three a Equilateral? "  + t3.isEquilateral());
		System.out.println("Is Triangle three a Isosceles? "  + t3.isIsosceles());
		System.out.println("Is Triangle three a Scalene? "  + t3.isScalene());
		
		*/
		
		EvaluationService q4 = new EvaluationService();
		
		//System.out.println(q4.getScrabbleScore("cabbage"));
		
		//EvaluationService q5 = new EvaluationService();
		//System.out.println(q5.cleanPhoneNumber("613.995.0253"));
		
		EvaluationService q6 = new EvaluationService();
		
		

	}
	private Map< String, Integer > maps;
	public Map<String, Integer> wordCount(String string) {
		// TODO Write an implementation for this method declaration
		maps = new HashMap < String, Integer > ();
		Set <String> keys = maps.keySet();
		StringTokenizer tokenizer = new StringTokenizer (string);
		
		while(tokenizer.hasMoreTokens()) {
			
			String word = tokenizer.nextToken().toLowerCase();
			
			if(maps.containsKey(word)) {
				int count = maps.get(word);
				maps.put(word, count + 1);
			}
			else
				maps.put(word, 1);			
		}
		for(String idx : keys) {
				System.out.println(idx + " count: " + maps.get(idx));
			}
		
		return null;
	}

}

