/**
 * 
 */
package com.revature.eval.java.core;

/**
 * @author phili
 *
 */
public class Execute {

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		EvaluationService q1 = new EvaluationService();
		
		//System.out.println(q1.reverse("Revature"));
		//System.out.println(q1.acronym("Portable Network Graphics"));
		
		Triangle t1 = new Triangle(10,10,10);
		Triangle t2 = new Triangle(9,10,10);
		Triangle t3 = new Triangle(1,2,3);
	
		System.out.println("Is Triangle one a Equilateral?"  + t1.isEquilateral());
		System.out.println("Is Triangle one a Isosceles?"  + t1.isIsosceles());
		System.out.println("Is Triangle one a Scalene?"  + t1.isScalene());
	/*
		System.out.println("Is Triangle two a Equilateral?"  + t2.isEquilateral());
		System.out.println("Is Triangle tw0 a Isosceles?"  + t2.isIsosceles());
		System.out.println("Is Triangle two a Scalene?"  + t2.isScalene());
	
		System.out.println("Is Triangle three a Equilateral?"  + t2.isEquilateral());
		System.out.println("Is Triangle three a Isosceles?"  + t2.isIsosceles());
		System.out.println("Is Triangle three a Scalene?"  + t2.isScalene());
		*/

	}

}

class Triangle {
	private double sideOne;
	private double sideTwo;
	private double sideThree;

	public Triangle() {
		super();
	}

	public Triangle(double sideOne, double sideTwo, double sideThree) {
		this();
		this.sideOne = sideOne;
		this.sideTwo = sideTwo;
		this.sideThree = sideThree;
	}

	public double getSideOne() {
		return sideOne;
	}

	public void setSideOne(double sideOne) {
		this.sideOne = sideOne;
	}

	public double getSideTwo() {
		return sideTwo;
	}

	public void setSideTwo(double sideTwo) {
		this.sideTwo = sideTwo;
	}

	public double getSideThree() {
		return sideThree;
	}

	public void setSideThree(double sideThree) {
		this.sideThree = sideThree;
	}

	public boolean isEquilateral() {
		// TODO Write an implementation for this method declaration
		if(sideOne==sideTwo && sideOne==sideThree && sideTwo==sideThree) return true;
		return false;
	}

	public boolean isIsosceles() {
		// TODO Write an implementation for this method declaration
		if(this.isEquilateral()) return false;
		else if(sideOne==sideTwo) return true;
		else if(sideOne==sideThree) return true;
		else if(sideTwo==sideThree) return true;
		return false;
	}

	public boolean isScalene() {
		// TODO Write an implementation for this method declaration
		if(this.isEquilateral()) return false;
		else if (this.isIsosceles()) return false;
		else return true;
	}

}
